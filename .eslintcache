[{"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\index.js":"1","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\App.js":"2","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Form.js":"3","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Logo.js":"4","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Login.js":"5","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\LandingPage.js":"6","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\services\\loginService.js":"7","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Navbar.js":"8","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Footer.js":"9","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Finances.js":"10","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Residence.js":"11","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Academics.js":"12","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\PDFAcademicTranscript.js":"13"},{"size":314,"mtime":1609893542833,"results":"14","hashOfConfig":"15"},{"size":1186,"mtime":1611523696719,"results":"16","hashOfConfig":"15"},{"size":523,"mtime":1609941659832,"results":"17","hashOfConfig":"15"},{"size":750,"mtime":1609894355083,"results":"18","hashOfConfig":"15"},{"size":2423,"mtime":1609942584512,"results":"19","hashOfConfig":"15"},{"size":2042,"mtime":1611523608159,"results":"20","hashOfConfig":"15"},{"size":1271,"mtime":1611593511281,"results":"21","hashOfConfig":"15"},{"size":1612,"mtime":1611356684050,"results":"22","hashOfConfig":"15"},{"size":144,"mtime":1609894941855,"results":"23","hashOfConfig":"15"},{"size":6360,"mtime":1611598112570,"results":"24","hashOfConfig":"15"},{"size":807,"mtime":1609952917010,"results":"25","hashOfConfig":"15"},{"size":15752,"mtime":1611649320125,"results":"26","hashOfConfig":"15"},{"size":6070,"mtime":1611648334514,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1fi90l1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\index.js",[],["58","59"],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\App.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Form.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Logo.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Login.js",["60"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getOneStudent } from '../../services/loginService';\r\n\r\nfunction Login(props) {\r\n  let [name, setName] = useState('');\r\n  let [password, setPassword] = useState('');\r\n  let [data, setData] = useState([]);\r\n  let [found, setFound] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  let { transfer } = props;\r\n\r\n  useEffect(() => {\r\n    transfer(data);\r\n  }, [data]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    getOneStudent(name, password)\r\n      .then(res => {\r\n        setData(res.data);\r\n        setFound(true);\r\n        found ? history.push('/dashboard/home') : <div>Loading. . .</div>\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setError(true);\r\n      });\r\n  }\r\n\r\n  const styles = {\r\n    height: '85vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textTransform: 'uppercase'\r\n  }\r\n\r\n  const formStyle = {\r\n    height: '50vh',\r\n    width: '50vw',\r\n    border: '1px solid black',\r\n    padding: '2rem',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  }\r\n\r\n  const buttonStyles = {\r\n    height: '3rem',\r\n    width: '60%'\r\n  }\r\n\r\n  const inputStyle = {\r\n    height: '3rem',\r\n    width: '60%'\r\n  }\r\n\r\n  const labelStyle = {\r\n    padding: '0',\r\n    margin: '0',\r\n    fontSize: '2.5rem'\r\n  }\r\n\r\n  const errorMessageStyles = {\r\n    marginBottom: '3vh',\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\" style={styles}>\r\n      {error ? <h1 style={errorMessageStyles}>Incorrect Login Details</h1> : ''}\r\n      <form style={formStyle} method=\"POST\">\r\n        <label htmlFor=\"student_no\" style={labelStyle}>\r\n          Student Number:\r\n        </label>\r\n        <input type=\"text\" name=\"student_no\" id=\"student_no\" style={inputStyle} onChange={e => setName(e.target.value)} />  \r\n        <label htmlFor=\"password\" style={labelStyle}>\r\n          Password:\r\n        </label>\r\n        <input type=\"password\" name=\"password\" style={inputStyle} onChange={e => setPassword(e.target.value)} />\r\n        <button type=\"submit\" style={buttonStyles} className=\"submit-button\" onClick={submitHandler}>Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\LandingPage.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\services\\loginService.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Navbar.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Footer.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Finances.js",["61","62","63","64","65","66","67","68","69"],"/* eslint-disable no-unused-expressions */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { sendPostgraduateApplication, getStudentCourse, getAllSchools, getSchoolCourses } from '../../services/loginService';\r\n\r\nfunction Finances(props) {\r\n  const history = useHistory();\r\n  let [submitted, setSubmitted] = useState(false);\r\n  let [course, setCourse] = useState([]);\r\n  let [schools, setSchools] = useState([]);\r\n  let [schoolCourses, setSchoolCourses] = useState([]);\r\n  let [selectedSchool, setSelectedSchool] = useState('Health Care Sciences');\r\n  let [postgraduateCourse, setPostgraduateCourse] = useState([]);\r\n  let [selectedCourse, setSelectedCourse] = useState('');\r\n  let [oneCourse, setOneCourse] = useState([]);\r\n  let [hasSchoolBeenSelected, setHasSchoolBeenSelected] = useState(false);\r\n  let [sentRequest, setSentRequest] = useState(false);\r\n  let [errorData, setErrorData] = useState('');\r\n  let [errorCode, setErrorCode] = useState(0);\r\n\r\n  let schoolArray = []\r\n\r\n  const { studentData } = props;\r\n\r\n  useEffect(() => {\r\n    getStudentCourse(studentData.id)\r\n      .then(res => res.data)\r\n      .then(data => setCourse(data))\r\n    \r\n    getAllSchools()\r\n      .then(res => res.data)\r\n      .then(data => setSchools(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    schools ? schools.map(school => {\r\n      getSchoolCourses(school.id)\r\n        .then(res => res.data)\r\n        .then(data => schoolArray.push(data))\r\n    }) : ''\r\n\r\n    setSchoolCourses(schoolArray)\r\n  }, [schools])\r\n\r\n  useEffect(() => {\r\n    let s = schools ? schools.filter(school => school.name === selectedSchool) : ''\r\n    let s_values = schoolCourses ? Object.values(schoolCourses)[0] : console.log('undef')\r\n    setOneCourse(s_values);\r\n    setHasSchoolBeenSelected(true);\r\n  }, [selectedSchool])\r\n\r\n  useEffect(() => {\r\n    let cour = oneCourse.filter(c => c.name === selectedCourse && c.qualification.name === 'Honours Degree');\r\n    setPostgraduateCourse(cour);\r\n  }, [selectedCourse])\r\n  \r\n  useEffect(() => {\r\n    if (Object.entries(postgraduateCourse).length !== 0)\r\n      sendPostgraduateApplication(studentData.id, Object.values(postgraduateCourse)[0].id)\r\n        .then(res => {\r\n          setErrorCode(res.status);\r\n          setErrorData(res.data);\r\n          setSentRequest(true);\r\n        })\r\n        .catch(e => {\r\n          if(e.response) {\r\n            setErrorData(e.response.data);\r\n            setErrorCode(e.response.status);\r\n          }\r\n        })\r\n  }, [submitted])\r\n\r\n  useEffect(() => {\r\n    if(sentRequest === true)\r\n      redirect();\r\n  }, [sentRequest])\r\n\r\n  const handleChange = e => setSelectedSchool(e.target.value);\r\n\r\n  const handleCourseChange = e => setSelectedCourse(e.target.value);\r\n\r\n  const headHome = () => history.push('/dashboard/home');\r\n\r\n  const headToFinance = () => history.push('/dashboard/finances');\r\n\r\n  const headToRes = () => history.push('/');\r\n\r\n  const headToSchool = () => history.push('/dashboard/academics');\r\n\r\n  const redirect = () => {\r\n    submitted ? \r\n      setTimeout(() => {\r\n        headHome();\r\n      }, 5000) : 'Warning';\r\n  }\r\n\r\n  const submitPostGrad = e => {\r\n    e.preventDefault();\r\n    setSubmitted(true);\r\n  }\r\n\r\n  const errorStyling = {\r\n    margin: '3vh 0'\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <Navbar\r\n        location=\"finances\"\r\n        headHome={headHome}\r\n        headToFinance={headToFinance}\r\n        headToRes={headToRes}\r\n        headToSchool={headToSchool}\r\n      />\r\n      <div className=\"finances\">\r\n        {\r\n          errorCode === 0 ? '' :\r\n          errorCode === 403 ? \r\n          <div style={errorStyling}>\r\n            <h3>{errorData}</h3>\r\n          </div> : ''\r\n        }\r\n        {\r\n          sentRequest === true ?\r\n          <div className={{\r\n            margin: '2vh 0',\r\n            textTransform: 'uppercase'\r\n          }}>\r\n            <h3>Application submitted. Your application will be reviewed</h3>\r\n          </div> : ''\r\n        }\r\n        <form method=\"POST\" style={{marginBottom: '4vh'}}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"firstname\">FIRSTNAME</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"firstname\" value={studentData.user.firstname}disabled></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"lastname\">LASTNAME</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"lastname\" value={studentData.user.lastname} disabled></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"idnumber\">ID NUMBER</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"idNumber\" value=\"990101082756\" disabled></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">EMAIL</label>\r\n            <input type=\"email\" className=\"form-control\" name=\"email\" value={studentData.user.email} disabled></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"stdNum\">STUDENT NUMBER</label>\r\n            <input type=\"text\" className=\"form-control\" name=\"studentNum\" value={studentData.studentNum} disabled></input>\r\n          </div>\r\n\r\n          <h4>SELECT YOUR SCHOOL</h4>\r\n          {\r\n            schools ? <select className=\"form-control\" value={selectedSchool} onChange={handleChange}>\r\n              {\r\n                schools.map(school => (\r\n                  <option key={school.id} value={school.name}>{school.name}</option>\r\n                ))\r\n              }\r\n            </select> : \"\"\r\n          }\r\n          {\r\n            hasSchoolBeenSelected ? <h4>SELECT YOUR COURSE</h4> : ''\r\n          }\r\n          {\r\n            oneCourse ? <select className=\"form-control\" onChange={handleCourseChange}>\r\n              {\r\n                oneCourse\r\n                  .filter(mod => mod.qualification.name === 'Honours Degree')\r\n                  .map(mod => (\r\n                    <option key={mod.id} value={mod.name}>{mod.name}</option>\r\n                ))\r\n              }\r\n            </select> : ''\r\n          }\r\n          <button type=\"submit\" onClick={submitPostGrad}>apply</button>\r\n        </form>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Finances;","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Residence.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Academics.js",["70","71","72","73","74","75","76"],"/* eslint-disable no-unused-expressions */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\r\nimport PDFAcademicTranscript from './PDFAcademicTranscript';\r\n\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getStudentCourse, getStudentModules } from '../../services/loginService';\r\n\r\nfunction Academics(props) {\r\n  const history = useHistory();\r\n  const [course, setCourse] = useState([]);\r\n  let [modules, setModules] = useState([]);\r\n  let [postModules, setPostModules] = useState([]);\r\n  let [ed, setEd] = useState(false);\r\n  let [pr, setPr] = useState(false);\r\n  let [er, setEr] = useState(false);\r\n  let [as, setAs] = useState(false);\r\n\r\n  const { studentData } = props;\r\n\r\n  useEffect(() => {\r\n    getStudentCourse(studentData.id)\r\n      .then(res => res.data)\r\n      .then(data => setCourse(data))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let undergrad = course.filter(c => c.course.postGraduateCourse == false)\r\n    if (Object.entries(undergrad).length !== 0)\r\n      getStudentModules(studentData.id, undergrad[0].id)\r\n        .then(res => res.data)\r\n        .then(data => setModules(data))\r\n    else\r\n      console.log('dne')\r\n\r\n    let postgrad = course.filter(c => c.course.postGraduateCourse == true)\r\n    if (Object.entries(postgrad).length !== 0)\r\n      getStudentModules(studentData.id, postgrad[0].id)\r\n      .then(res => res.data)\r\n      .then(data => setPostModules(data))\r\n    else\r\n      console.log('dne post')\r\n  }, [course])\r\n\r\n  const headHome = () => history.push('/dashboard/home');\r\n\r\n  const headToFinance = () => history.push('/dashboard/postgraduate');\r\n\r\n  const headToRes = () => history.push('/');\r\n\r\n  const headToSchool = () => history.push('/dashboard/academics');\r\n\r\n  // const downloadPDF = () => ReactPDF.render(<PDFAcademicTranscript />, `${__dirname}/example.pdf`);\r\n\r\n  // const downloadPDF = () => <PDFDownloadLink document={<PDFAcademicTranscript />} fileName=\"somename.pdf\">\r\n  // {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\r\n  // </PDFDownloadLink>\r\n\r\n  const downloadPDF = () => 'hello'\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        location=\"academics\"\r\n        headHome={headHome}\r\n        headToFinance={headToFinance}\r\n        headToRes={headToRes}\r\n        headToSchool={headToSchool}\r\n      />\r\n      <div className=\"academics\">\r\n        {\r\n            <div className=\"academic-details\">\r\n              <div className=\"enrolment\">\r\n                <button onClick={() => setEd(!ed)}>\r\n                  <h3>\r\n                    Enrolment Details\r\n                    {\r\n                      ed ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  ed ? \r\n                  <div className=\"enrolment-details\">\r\n                    {\r\n                      course ?\r\n                      course\r\n                        .filter(c => c.approved)\r\n                        .map(c => (\r\n                        <table key={c.id}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>SCHOOL</td>\r\n                              <td>{c.course.school.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>COURSE</td>\r\n                              <td>{c.course.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>COURSE CODE</td>\r\n                              <td>{c.course.code}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>CURRENT LEVEL</td>\r\n                              <td>{c.currentLevel}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <h3>MODULES</h3>\r\n                              </td>\r\n                            </tr>\r\n                            \r\n                            <table className=\"table\" style={{fontWeight: '600', fontSize: '1.5rem'}}>\r\n                              <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                  <th scope=\"col\">CODE</th>\r\n                                  <th scope=\"col\">NAME</th>\r\n                                  <th scope=\"col\">ACADEMIC PERIOD</th>\r\n                                  <th scope=\"col\">YEAR</th>\r\n                                </tr>\r\n                              </thead>\r\n                            {\r\n                              modules ? modules\r\n                                .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                                .filter(m => m.module.year === course[0].currentLevel)\r\n                                .map(mod => (\r\n                                  <tbody key={mod.id}>\r\n                                    <tr>\r\n                                      <td>{mod.module.code}</td>\r\n                                      <td>{mod.module.name}</td>\r\n                                      <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                                      <td>{mod.module.year}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                              )) : ''\r\n                            }\r\n                            </table>\r\n                          </tbody>\r\n                        </table>\r\n                      )) : ''\r\n                    }\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"report\">\r\n                <button onClick={() => setPr(!pr)}>\r\n                  <h3>\r\n                    Progress Report\r\n                    {\r\n                      pr ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  pr ? \r\n                  <div className=\"enrolment-details\">\r\n                    <div>\r\n                      <h3>STUDENT NUMBER {studentData.studentNum}</h3>\r\n                      <h3>STUDENT NAME {`${studentData.user.firstname} ${studentData.user.lastname}`}</h3>\r\n                      <br/>\r\n                    </div>\r\n                    {/* {\r\n                      Object.entries(course).length !== 0 && Object.entries(modules).length !== 0 ?\r\n                        <PDFViewer>\r\n                          <PDFAcademicTranscript\r\n                            studentData={studentData}\r\n                            modules={modules}\r\n                            course={course}\r\n                          />\r\n                        </PDFViewer>\r\n                      : ''\r\n                    } */}\r\n                    <hr/>\r\n                    <h3>YEAR: 2021</h3>\r\n\r\n                    <table className=\"table\">\r\n                      <thead className=\"thead-dark\">\r\n                        <tr>\r\n                          <th>CODE</th>\r\n                          <th>MODULE</th>\r\n                          <th>PERIOD</th>\r\n                          <th>GRADE</th>\r\n                        </tr>\r\n                      </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                        .filter(m => course[0].currentLevel === m.module.year)\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                            <tr>\r\n                              <td>{mod.module.code}</td>\r\n                              <td>{mod.module.name}</td>\r\n                              <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                              <td>{mod.grade}</td>\r\n                            </tr>\r\n                          </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                    <br/><hr/>\r\n                        <h3>YEAR: 2020</h3>\r\n                    \r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                       <tr>\r\n                        <th>CODE</th>\r\n                         <th>MODULE</th>\r\n                         <th>PERIOD</th>\r\n                         <th>GRADE</th>\r\n                       </tr>\r\n                     </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                        .filter(m => (course[0].currentLevel > 0 && course[0].currentLevel - 1 === m.module.year))\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                            <tr>\r\n                              <td>{mod.module.code}</td>\r\n                              <td>{mod.module.name}</td>\r\n                              <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                              <td>{mod.grade}</td>\r\n                            </tr>\r\n                          </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                    <br/><hr/>\r\n\r\n                    <h3>YEAR: 2019</h3>\r\n                    \r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                       <tr>\r\n                        <th>CODE</th>\r\n                         <th>MODULE</th>\r\n                         <th>PERIOD</th>\r\n                         <th>GRADE</th>\r\n                       </tr>\r\n                     </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                        .filter(m => (course[0].currentLevel > 0 && course[0].currentLevel - 2 === m.module.year))\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                          <tr>\r\n                            <td>{mod.module.code}</td>\r\n                            <td>{mod.module.name}</td>\r\n                            <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                            <td>{mod.grade}</td>\r\n                          </tr>\r\n                        </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                    <hr />\r\n                    {\r\n                      Object.entries(course).length !== 0 && Object.entries(modules).length !== 0 ?\r\n                        <PDFDownloadLink\r\n                          style={{\r\n                            backgroundColor: '#007bff',\r\n                            padding: '8px 14px',\r\n                            margin: '15px 8px',\r\n                            textDecoration: 'none',\r\n                            textTransform: 'uppercase',\r\n                            borderRadius: '4px',\r\n                            color: '#fff',\r\n                          }}\r\n                          document={\r\n                            <PDFAcademicTranscript\r\n                              studentData={studentData}\r\n                              modules={modules}\r\n                              course={course}\r\n                            />\r\n                          }\r\n                          fileName=\"academic_record.pdf\">\r\n                          {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download document')}\r\n                        </PDFDownloadLink>\r\n                      : ''\r\n                    }\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"results\">\r\n                <button onClick={() => setEr(!er)}>\r\n                  <h3>\r\n                    Examination Results\r\n                    {\r\n                      er ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  er ? \r\n                  <div className=\"enrolment-details\">\r\n                    <h3>STUDENT NUMBER {studentData.studentNum}</h3><br/>\r\n                    <h3>RESULTS FOR: {`${studentData.user.firstname} ${studentData.user.lastname}`}</h3><br/>\r\n                    {\r\n                      course ?\r\n                        course\r\n                          .filter(c => c.approved)\r\n                          .map(c => ( \r\n                            <h3>QUALIFICATION: BSc ({`${c.course.name}`}) {`${c.currentLevel}`}</h3>\r\n                          ))\r\n                        : ''\r\n                    } \r\n                    <br/>\r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                        <tr>\r\n                          <td>MODULES</td>\r\n                          <td>ACADEMIC PERIOD</td>\r\n                          <td>MARK</td>\r\n                        </tr>\r\n                      </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                        .filter(m => course[0].currentLevel === m.module.year)\r\n                        .map(mod => (\r\n                        <tbody key={mod.id}>\r\n                          <tr>\r\n                            <td>{mod.module.name}</td>\r\n                            <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                            <td>{mod.grade}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      )) : ''\r\n                    }\r\n                    </table>\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"admission\">\r\n                <button onClick={() => setAs(!as)}>\r\n                  <h3>\r\n                    Admission Status\r\n                    {\r\n                      as ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  as ? \r\n                  <div className=\"enrolment-details\">\r\n                    {\r\n                      course ?\r\n                        course.map(c => (\r\n                          <div key={c.id}>\r\n                            <table className=\"table\">\r\n                              <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                  <th>CODE</th>\r\n                                  <th>NAME</th>\r\n                                  <th>STATUS</th>\r\n                                  <th>COMPLETED</th>\r\n                                </tr>\r\n                              </thead>\r\n                              <tbody>\r\n                                <tr>\r\n                                  <td>{c.course.code}</td>\r\n                                  <td>{c.course.name}</td>\r\n                                  <td>{c.approved ? 'APPROVED' : 'PENDING'}</td>\r\n                                  <td>{c.completed ? 'COMPLETED' : 'NOT COMPLETED'}</td>\r\n                                </tr>\r\n                              </tbody>\r\n                            </table>\r\n                            <hr /><br />\r\n                          </div>\r\n                        )) : ''\r\n                    }\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n            </div>\r\n        }\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Academics;","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\PDFAcademicTranscript.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":18,"column":6,"nodeType":"83","endLine":18,"endColumn":12,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":12,"column":8,"nodeType":"87","messageId":"88","endLine":12,"endColumn":14},{"ruleId":"81","severity":1,"message":"89","line":36,"column":6,"nodeType":"83","endLine":36,"endColumn":8,"suggestions":"90"},{"ruleId":"91","severity":1,"message":"92","line":39,"column":34,"nodeType":"93","messageId":"94","endLine":39,"endColumn":36},{"ruleId":"81","severity":1,"message":"95","line":46,"column":6,"nodeType":"83","endLine":46,"endColumn":15,"suggestions":"96"},{"ruleId":"85","severity":1,"message":"97","line":49,"column":9,"nodeType":"87","messageId":"88","endLine":49,"endColumn":10},{"ruleId":"81","severity":1,"message":"98","line":53,"column":6,"nodeType":"83","endLine":53,"endColumn":22,"suggestions":"99"},{"ruleId":"81","severity":1,"message":"100","line":58,"column":6,"nodeType":"83","endLine":58,"endColumn":22,"suggestions":"101"},{"ruleId":"81","severity":1,"message":"102","line":74,"column":6,"nodeType":"83","endLine":74,"endColumn":17,"suggestions":"103"},{"ruleId":"81","severity":1,"message":"104","line":79,"column":6,"nodeType":"83","endLine":79,"endColumn":19,"suggestions":"105"},{"ruleId":"85","severity":1,"message":"106","line":4,"column":27,"nodeType":"87","messageId":"88","endLine":4,"endColumn":36},{"ruleId":"85","severity":1,"message":"107","line":16,"column":8,"nodeType":"87","messageId":"88","endLine":16,"endColumn":19},{"ruleId":"81","severity":1,"message":"89","line":28,"column":6,"nodeType":"83","endLine":28,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":31,"column":68,"nodeType":"111","messageId":"112","endLine":31,"endColumn":70},{"ruleId":"109","severity":1,"message":"110","line":39,"column":67,"nodeType":"111","messageId":"112","endLine":39,"endColumn":69},{"ruleId":"81","severity":1,"message":"89","line":46,"column":6,"nodeType":"83","endLine":46,"endColumn":14,"suggestions":"113"},{"ruleId":"85","severity":1,"message":"114","line":62,"column":9,"nodeType":"87","messageId":"88","endLine":62,"endColumn":20},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transfer'. Either include it or remove the dependency array.","ArrayExpression",["117"],"no-unused-vars","'course' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'studentData.id'. Either include it or remove the dependency array.",["118"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'schoolArray'. Either include it or remove the dependency array.",["119"],"'s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'schoolCourses' and 'schools'. Either include them or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'oneCourse'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has missing dependencies: 'postgraduateCourse' and 'studentData.id'. Either include them or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["123"],"'PDFViewer' is defined but never used.","'postModules' is assigned a value but never used.",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["125"],"'downloadPDF' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"128","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [data, transfer]",{"range":"143","text":"144"},"Update the dependencies array to be: [studentData.id]",{"range":"145","text":"146"},"Update the dependencies array to be: [schoolArray, schools]",{"range":"147","text":"148"},"Update the dependencies array to be: [schoolCourses, schools, selectedSchool]",{"range":"149","text":"150"},"Update the dependencies array to be: [oneCourse, selectedCourse]",{"range":"151","text":"152"},"Update the dependencies array to be: [postgraduateCourse, studentData.id, submitted]",{"range":"153","text":"154"},"Update the dependencies array to be: [redirect, sentRequest]",{"range":"155","text":"156"},{"range":"157","text":"146"},"Update the dependencies array to be: [course, studentData.id]",{"range":"158","text":"159"},[518,524],"[data, transfer]",[1374,1376],"[studentData.id]",[1611,1620],"[schoolArray, schools]",[1893,1909],"[schoolCourses, schools, selectedSchool]",[2085,2101],"[oneCourse, selectedCourse]",[2591,2602],"[postgraduateCourse, studentData.id, submitted]",[2682,2695],"[redirect, sentRequest]",[955,957],[1580,1588],"[course, studentData.id]"]