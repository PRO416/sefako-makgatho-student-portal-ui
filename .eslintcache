[{"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\index.js":"1","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\App.js":"2","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Form.js":"3","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Logo.js":"4","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Login.js":"5","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\LandingPage.js":"6","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\services\\loginService.js":"7","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Navbar.js":"8","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Footer.js":"9","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Finances.js":"10","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Residence.js":"11","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Academics.js":"12"},{"size":314,"mtime":1609893542833,"results":"13","hashOfConfig":"14"},{"size":1186,"mtime":1611523696719,"results":"15","hashOfConfig":"14"},{"size":523,"mtime":1609941659832,"results":"16","hashOfConfig":"14"},{"size":750,"mtime":1609894355083,"results":"17","hashOfConfig":"14"},{"size":2423,"mtime":1609942584512,"results":"18","hashOfConfig":"14"},{"size":2042,"mtime":1611523608159,"results":"19","hashOfConfig":"14"},{"size":1271,"mtime":1611593511281,"results":"20","hashOfConfig":"14"},{"size":1612,"mtime":1611356684050,"results":"21","hashOfConfig":"14"},{"size":144,"mtime":1609894941855,"results":"22","hashOfConfig":"14"},{"size":5781,"mtime":1611593246235,"results":"23","hashOfConfig":"14"},{"size":807,"mtime":1609952917010,"results":"24","hashOfConfig":"14"},{"size":11944,"mtime":1611523649616,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1fi90l1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\index.js",[],["53","54"],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\App.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Form.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Logo.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\form\\Login.js",["55"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getOneStudent } from '../../services/loginService';\r\n\r\nfunction Login(props) {\r\n  let [name, setName] = useState('');\r\n  let [password, setPassword] = useState('');\r\n  let [data, setData] = useState([]);\r\n  let [found, setFound] = useState(false);\r\n  let [error, setError] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  let { transfer } = props;\r\n\r\n  useEffect(() => {\r\n    transfer(data);\r\n  }, [data]);\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n\r\n    getOneStudent(name, password)\r\n      .then(res => {\r\n        setData(res.data);\r\n        setFound(true);\r\n        found ? history.push('/dashboard/home') : <div>Loading. . .</div>\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setError(true);\r\n      });\r\n  }\r\n\r\n  const styles = {\r\n    height: '85vh',\r\n    width: '100vw',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    textTransform: 'uppercase'\r\n  }\r\n\r\n  const formStyle = {\r\n    height: '50vh',\r\n    width: '50vw',\r\n    border: '1px solid black',\r\n    padding: '2rem',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center'\r\n  }\r\n\r\n  const buttonStyles = {\r\n    height: '3rem',\r\n    width: '60%'\r\n  }\r\n\r\n  const inputStyle = {\r\n    height: '3rem',\r\n    width: '60%'\r\n  }\r\n\r\n  const labelStyle = {\r\n    padding: '0',\r\n    margin: '0',\r\n    fontSize: '2.5rem'\r\n  }\r\n\r\n  const errorMessageStyles = {\r\n    marginBottom: '3vh',\r\n  }\r\n\r\n  return (\r\n    <div className=\"login\" style={styles}>\r\n      {error ? <h1 style={errorMessageStyles}>Incorrect Login Details</h1> : ''}\r\n      <form style={formStyle} method=\"POST\">\r\n        <label htmlFor=\"student_no\" style={labelStyle}>\r\n          Student Number:\r\n        </label>\r\n        <input type=\"text\" name=\"student_no\" id=\"student_no\" style={inputStyle} onChange={e => setName(e.target.value)} />  \r\n        <label htmlFor=\"password\" style={labelStyle}>\r\n          Password:\r\n        </label>\r\n        <input type=\"password\" name=\"password\" style={inputStyle} onChange={e => setPassword(e.target.value)} />\r\n        <button type=\"submit\" style={buttonStyles} className=\"submit-button\" onClick={submitHandler}>Login</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\LandingPage.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\services\\loginService.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Navbar.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Footer.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Finances.js",["56","57","58","59","60","61","62","63"],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Residence.js",[],"C:\\Users\\PRO416\\Documents\\Projects\\React Projects\\sefako-makgatho-student-portal-UI\\smu-student-portal-ui\\src\\components\\landingPage\\Academics.js",["64","65"],"/* eslint-disable no-unused-expressions */\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getStudentCourse, getStudentModules } from '../../services/loginService';\r\n\r\nfunction Academics(props) {\r\n  const history = useHistory();\r\n  const [course, setCourse] = useState([]);\r\n  let [modules, setModules] = useState([]);\r\n  let [ed, setEd] = useState(false);\r\n  let [pr, setPr] = useState(false);\r\n  let [er, setEr] = useState(false);\r\n  let [as, setAs] = useState(false);\r\n\r\n  const { studentData } = props;\r\n\r\n  useEffect(() => {\r\n    getStudentCourse(studentData.id)\r\n      .then(res => res.data)\r\n      .then(data => setCourse(data))\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    course[0] ? getStudentModules(studentData.id, course[0].id)\r\n      .then(res => res.data)\r\n      .then(data => setModules(data)) : 'dne'\r\n  }, [course])\r\n\r\n  const headHome = () => history.push('/dashboard/home');\r\n\r\n  const headToFinance = () => history.push('/dashboard/postgraduate');\r\n\r\n  const headToRes = () => history.push('/');\r\n\r\n  const headToSchool = () => history.push('/dashboard/academics');\r\n\r\n  return (\r\n    <div>\r\n      <Navbar\r\n        location=\"academics\"\r\n        headHome={headHome}\r\n        headToFinance={headToFinance}\r\n        headToRes={headToRes}\r\n        headToSchool={headToSchool}\r\n      />\r\n      <div className=\"academics\">\r\n        {\r\n          course ? course.map(c => (\r\n            <div key={c.id} className=\"academic-details\">\r\n              <div className=\"enrolment\">\r\n                <button onClick={() => setEd(!ed)}>\r\n                  <h3>\r\n                    Enrolment Details\r\n                    {\r\n                      ed ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  ed ? \r\n                  <div className=\"enrolment-details\">\r\n                    {\r\n                      course ?\r\n                      course.map(c => (\r\n                        <table key={c.id}>\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>SCHOOL</td>\r\n                              <td>{c.course.school.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>COURSE</td>\r\n                              <td>{c.course.name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>COURSE CODE</td>\r\n                              <td>{c.course.code}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>CURRENT LEVEL</td>\r\n                              <td>{c.currentLevel}</td>\r\n                            </tr>\r\n                            <tr>\r\n                              <td>\r\n                                <h3>MODULES</h3>\r\n                              </td>\r\n                            </tr>\r\n                            \r\n                            <table className=\"table\" style={{fontWeight: '600', fontSize: '1.5rem'}}>\r\n                              <thead className=\"thead-dark\">\r\n                                <tr>\r\n                                  <th scope=\"col\">CODE</th>\r\n                                  <th scope=\"col\">NAME</th>\r\n                                  <th scope=\"col\">ACADEMIC PERIOD</th>\r\n                                  <th scope=\"col\">YEAR</th>\r\n                                </tr>\r\n                              </thead>\r\n                            {\r\n                              modules ? modules\r\n                                .filter(m => m.module.year === course[0].currentLevel)\r\n                                .map(mod => (\r\n                                  <tbody key={mod.id}>\r\n                                    <tr>\r\n                                      <td>{mod.module.code}</td>\r\n                                      <td>{mod.module.name}</td>\r\n                                      <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                                      <td>{mod.module.year}</td>\r\n                                    </tr>\r\n                                  </tbody>\r\n                              )) : ''\r\n                            }\r\n                            </table>\r\n                          </tbody>\r\n                        </table>\r\n                      )) : ''\r\n                    }\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"report\">\r\n                <button onClick={() => setPr(!pr)}>\r\n                  <h3>\r\n                    Progress Report\r\n                    {\r\n                      pr ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  pr ? \r\n                  <div className=\"enrolment-details\">\r\n                    <div>\r\n                      <h3>STUDENT NUMBER {studentData.studentNum}</h3>\r\n                      <h3>STUDENT NAME {`${studentData.user.firstname} ${studentData.user.lastname}`}</h3>\r\n                      <br/>\r\n                    </div>\r\n                    \r\n                    <hr/>\r\n                    <h3>YEAR: 2021</h3>\r\n\r\n                    <table className=\"table\">\r\n                      <thead className=\"thead-dark\">\r\n                        <tr>\r\n                          <th>CODE</th>\r\n                          <th>MODULE</th>\r\n                          <th>PERIOD</th>\r\n                          <th>GRADE</th>\r\n                        </tr>\r\n                      </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .filter(m => course[0].currentLevel === m.module.year)\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                            <tr>\r\n                              <td>{mod.module.code}</td>\r\n                              <td>{mod.module.name}</td>\r\n                              <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                              <td>{mod.grade}</td>\r\n                            </tr>\r\n                          </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                    <br/><hr/>\r\n                        <h3>YEAR: 2020</h3>\r\n                    \r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                       <tr>\r\n                        <th>CODE</th>\r\n                         <th>MODULE</th>\r\n                         <th>PERIOD</th>\r\n                         <th>GRADE</th>\r\n                       </tr>\r\n                     </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .filter(m => (course[0].currentLevel > 0 && course[0].currentLevel - 1 === m.module.year))\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                            <tr>\r\n                              <td>{mod.module.code}</td>\r\n                              <td>{mod.module.name}</td>\r\n                              <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                              <td>{mod.grade}</td>\r\n                            </tr>\r\n                          </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                    <br/><hr/>\r\n\r\n                    <h3>YEAR: 2019</h3>\r\n                    \r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                       <tr>\r\n                        <th>CODE</th>\r\n                         <th>MODULE</th>\r\n                         <th>PERIOD</th>\r\n                         <th>GRADE</th>\r\n                       </tr>\r\n                     </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .filter(m => (course[0].currentLevel > 0 && course[0].currentLevel - 2 === m.module.year))\r\n                        .map(mod => (\r\n                          <tbody key={mod.id}>\r\n                          <tr>\r\n                            <td>{mod.module.code}</td>\r\n                            <td>{mod.module.name}</td>\r\n                            <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                            <td>{mod.grade}</td>\r\n                          </tr>\r\n                        </tbody>)) : ''\r\n                    }\r\n                    </table>\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"results\">\r\n                <button onClick={() => setEr(!er)}>\r\n                  <h3>\r\n                    Examination Results\r\n                    {\r\n                      er ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  er ? \r\n                  <div className=\"enrolment-details\">\r\n                    <h3>STUDENT NUMBER {studentData.studentNum}</h3><br/>\r\n                    <h3>RESULTS FOR: {`${studentData.user.firstname} ${studentData.user.lastname}`}</h3><br/>\r\n                    <h3>QUALIFICATION: BSc (Mathematical Sciences) III</h3><br/>\r\n                    <table className=\"table\">\r\n                     <thead className=\"thead-dark\">\r\n                        <tr>\r\n                          <td>MODULES</td>\r\n                          <td>ACADEMIC PERIOD</td>\r\n                          <td>MARK</td>\r\n                        </tr>\r\n                      </thead>\r\n                    {\r\n                      modules ? modules\r\n                        .sort((a, b) => a.module.academicPeriod - b.module.academicPeriod)\r\n                        .filter(m => course[0].currentLevel === m.module.year)\r\n                        .map(mod => (\r\n                        <tbody key={mod.id}>\r\n                          <tr>\r\n                            <td>{mod.module.name}</td>\r\n                            <td>{mod.module.academicPeriod === 1 ? 'FIRST SEMESTER' : 'SECOND SEMESTER'}</td>\r\n                            <td>{mod.grade}</td>\r\n                          </tr>\r\n                        </tbody>\r\n                      )) : ''\r\n                    }\r\n                    </table>\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n              <div className=\"admission\">\r\n                <button onClick={() => setAs(!as)}>\r\n                  <h3>\r\n                    Admission Status\r\n                    {\r\n                      as ? ' -' : ' +'\r\n                    }\r\n                  </h3>\r\n                </button>\r\n                {\r\n                  as ? \r\n                  <div className=\"enrolment-details\">\r\n                    {\r\n                      course ?\r\n                        course.map(c => (\r\n                          <table key={c.id}>\r\n                            <tbody>\r\n                              <tr>\r\n                                <td>APPROVAL</td>\r\n                                <td>{c.approved ? 'APPROVED' : 'NOT APPROVED'}</td>\r\n                              </tr>\r\n                              <tr>\r\n                                <td>COMPLETED</td>\r\n                                <td>{c.completed ? 'COMPLETED' : 'NOT COMPLETED'}</td>\r\n                              </tr>\r\n                            </tbody>\r\n                          </table>\r\n                        )) : ''\r\n                    }\r\n                  </div> : ''\r\n                }\r\n              </div>\r\n            </div>\r\n          )) : <div>Loading . . .</div>\r\n        }\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Academics;",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":6,"nodeType":"72","endLine":18,"endColumn":12,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":12,"column":8,"nodeType":"76","messageId":"77","endLine":12,"endColumn":14},{"ruleId":"70","severity":1,"message":"78","line":33,"column":6,"nodeType":"72","endLine":33,"endColumn":8,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":36,"column":34,"nodeType":"82","messageId":"83","endLine":36,"endColumn":36},{"ruleId":"70","severity":1,"message":"84","line":43,"column":6,"nodeType":"72","endLine":43,"endColumn":15,"suggestions":"85"},{"ruleId":"74","severity":1,"message":"86","line":46,"column":9,"nodeType":"76","messageId":"77","endLine":46,"endColumn":10},{"ruleId":"70","severity":1,"message":"87","line":50,"column":6,"nodeType":"72","endLine":50,"endColumn":22,"suggestions":"88"},{"ruleId":"70","severity":1,"message":"89","line":55,"column":6,"nodeType":"72","endLine":55,"endColumn":22,"suggestions":"90"},{"ruleId":"70","severity":1,"message":"91","line":70,"column":6,"nodeType":"72","endLine":70,"endColumn":17,"suggestions":"92"},{"ruleId":"70","severity":1,"message":"78","line":24,"column":6,"nodeType":"72","endLine":24,"endColumn":8,"suggestions":"93"},{"ruleId":"70","severity":1,"message":"78","line":30,"column":6,"nodeType":"72","endLine":30,"endColumn":14,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'transfer'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-unused-vars","'course' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'studentData.id'. Either include it or remove the dependency array.",["98"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'schoolArray'. Either include it or remove the dependency array.",["99"],"'s' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'schoolCourses' and 'schools'. Either include them or remove the dependency array.",["100"],"React Hook useEffect has a missing dependency: 'oneCourse'. Either include it or remove the dependency array.",["101"],"React Hook useEffect has missing dependencies: 'postgraduateCourse' and 'studentData.id'. Either include them or remove the dependency array.",["102"],["103"],["104"],"no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},{"desc":"115","fix":"116"},{"desc":"107","fix":"117"},{"desc":"118","fix":"119"},"Update the dependencies array to be: [data, transfer]",{"range":"120","text":"121"},"Update the dependencies array to be: [studentData.id]",{"range":"122","text":"123"},"Update the dependencies array to be: [schoolArray, schools]",{"range":"124","text":"125"},"Update the dependencies array to be: [schoolCourses, schools, selectedSchool]",{"range":"126","text":"127"},"Update the dependencies array to be: [oneCourse, selectedCourse]",{"range":"128","text":"129"},"Update the dependencies array to be: [postgraduateCourse, studentData.id, submitted]",{"range":"130","text":"131"},{"range":"132","text":"123"},"Update the dependencies array to be: [course, studentData.id]",{"range":"133","text":"134"},[518,524],"[data, transfer]",[1221,1223],"[studentData.id]",[1458,1467],"[schoolArray, schools]",[1740,1756],"[schoolCourses, schools, selectedSchool]",[1932,1948],"[oneCourse, selectedCourse]",[2532,2543],"[postgraduateCourse, studentData.id, submitted]",[771,773],[947,955],"[course, studentData.id]"]